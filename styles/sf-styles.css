/* 
 SF-Styles is a base styleguide for studioflora.io and Studio Flora tools. 
 
 It is designed for rapid prototyping with flex and a 12-col grid.
*/

:root {
    /* Layout settings */
    font-size: 16px;
    --border: 0.08rem solid var(--bg-2);
    --radius-small: 0.1rem;
    --radius-large: 1.25rem;
    --padding-med: 0.5em;

    /* Animation settings */
    --speed: 180ms;
    --ease: ease var(--speed);
    --in-out: ease-in-out var(--speed);
    --in: ease-in var(--speed);
    --out: ease-out var(--speed);

    /* Color swatches */
    --dark-base-0: #080e0c;
    --dark-base-1: #0f1413;
    --dark-base-2: #161a19;
    --dark-base-3: #202b28;
    --dark-base-4: #414846;
    --dark-accent-0: #ff1024;
    --dark-accent-1: #3f7cec;
 
    --light-base-0: #f9fbf9;
    --light-base-1: #edf0ed;
    --light-base-2: #bfe7db;
    --light-base-3: #86ddc2;
    --light-base-4: #72c1a8;
    --light-accent-0: #dfff10;
    --light-accent-1: #02c4ef;

    --shadow: #24282a1e;
 
    /* 
     COLOR GUIDE
     Swatches are separated into dark and light groups. A background from one group should use colors and highlights from the opposite group to maintain intended contrast.

     fg-0 (highest contrast): default text color
     fg-1 (medium contrast): accent color
     fg-2 (lowest contrast):    
 
     bg-0 (highest contrast): default background
     bg-1 (medium contrast): 
     bg-2 (lowest contrast): borders
 
     highlight: to indicate selected/active objects
    */
    
    /* Default theme */
    --fg-0: var(--dark-base-0);
    --fg-1: var(--dark-base-1);
    --fg-2: var(--dark-base-2);
 
    --bg-0: var(--light-base-0);
    --bg-1: var(--light-base-1);
    --bg-2: var(--light-base-2);
 
    --highlight: var(--dark-accent-1);
}

/* Alternate light theme */
.scheme-1 {
    --fg-0: var(--dark-base-0);
    --fg-1: var(--dark-base-1);
    --fg-2: var(--dark-base-2);
    
    --bg-0: var(--light-base-2);
    --bg-1: var(--light-base-0);
    --bg-2: var(--light-base-3);
}

.darkmode {
    /* Default dark theme */
    --fg-0: var(--light-base-0);
    --fg-1: var(--light-base-1);
    --fg-2: var(--light-base-2);

    --bg-0: var(--dark-base-0);
    --bg-1: var(--dark-base-1);
    --bg-2: var(--dark-base-2);

    --highlight: var(--light-accent-1);

    /* Alternate dark theme */
    &.scheme-1 {
        --fg-0: var(--light-base-0);
        --fg-1: var(--light-base-1);
        --fg-2: var(--light-base-2);
    
        --bg-0: var(--dark-base-2);
        --bg-1: var(--dark-base-0);
        --bg-2: var(--dark-base-3);
    }
}

body {
    font-family: 'IBM Plex Sans', sans-serif;
    font-weight: 400;
    font-style: normal;
    max-width: 100vw;
    overflow-x: hidden;
    background: var(--fg-0);
}

* {
    color: var(--fg-0);
}

main, nav, footer {
    background: var(--bg-0);
}

nav {
    padding: 0 var(--padding);
    height: 3.5rem;
    font-size: 1.25rem;
}

nav-bar nav {
    position: sticky;
    top: 0px;
    z-index: 3;
}

main {
    border-radius: var(--radius-large);
}

.rounded {
    border-radius: var(--radius-large);
}

.swatch {
    aspect-ratio: 1;
    padding: var(--padding-med);
}

.spaced {
    padding: 2rem 0;
}

.dropshadow {
    filter: drop-shadow(0 0 1rem var(--shadow));
}

.bg-1 {
    background: var(--bg-1);
}

.bg-2 {
    background: var(--bg-2);
}

.bg-accent {
    background: var(--highlight);
}

svg {
    fill: var(--fg-0);
    display: inline;
    align-self: center;
}

a {
    text-decoration: none;

    svg {
        height: 1em;
        width: 1em;
    }
}

p, li, a {
    padding: 0.5em 0;
    line-height: 1.6em;
}

h1, h2, h3, h4, h5, h6, p {
    &.caps {
        text-transform: uppercase;
    }
}

h1, h2, h3, h4, h5, h6 {
    padding: 0.5em 0 0;
    font-weight: 600;
}

h1 {
    font-size: 4rem;
}

h2 {
    font-size: 3rem;
}

h3 {
    font-size: 2rem;
}

h4, p.jumbo {
    font-size: 1.25rem;
}

h5 {
    font-size: 1rem;
}

h6 {
    font-size: 0.8rem;
}

i {
    font-style: italic;
}

.balanced {
    text-wrap: balance;
}

.logo {
    font-size: 1.5rem;
    font-weight: 500;
}

.hidden {
    display: none;
}

svg {
    height: 1em;
    width: 1em;
}

.padding, button {
    padding-inline: 1em;
}

a, button, .link {
    display: flex;
    align-items: center;
    gap: 0.25rem;
}

button {
    height: 2.5em;
    margin-inline: -0.2em;
    border-radius: var(--radius-large);

    &.strong {
        color: var(--bg-0);
        background: var(--fg-0);

        svg {
            fill: var(--bg-0);
        }
    }

    &.outlined {
        border: var(--border);
        border-color: var(--fg-0);
    }
}

.grid-palette {
    display: grid;
    gap: 0.8rem 1rem;
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
}

.grid {
    display: grid;
    width: min(100vw - 140px, 1400px);
    margin-inline: auto;
    gap: 0.8rem 1rem;
    grid-template-columns: repeat(12, minmax(0, 1fr));

    .grid-12 {
        grid-column: 1 / span 12;
    }

    >*, .grid-8 {
        grid-column: 3 / span 8;
    }

    .grid-6 {
        grid-column: 4 / span 6;
    }

    .grid-4 {
        grid-column: 5 / span 4;
    }

    .grid-2 {
        grid-column: 6 / span 2;
    }
}

.flex, .flex-spread, .flex-space, .flex-center, .column {
    display: flex;
    gap: 1em;
    align-items: center;
}

.column {
    flex-direction: column;
    align-items: stretch;
}

.flex-spread {
    justify-content: space-between;
}

.flex-space {
    justify-content: space-evenly;
}

.flex-center {
    justify-content: center;
}

.dense {
    gap: 0;
}

.corner {
    height: var(--radius-large);
    width: var(--radius-large);
    fill: var(--bg-0);
    position: absolute;
    top: 100%;
    left: 0;
}

.corner:last-of-type {
    left: auto;
    right: 0;
    transform: rotate(90deg);
}

#toggle-menu {
    display: none;
}

@media (max-aspect-ratio: 2/3) {
    .grid {
        width: calc(100vw - 70px);
        display: flex;
        flex-direction: column;
    }
}

@media (hover: hover) {
    a, button {
        transition: color var(--ease);

        svg {
            transition: fill var(--ease);
        }
    }

    a:hover {
        color: var(--highlight);

        svg {
            fill: var(--highlight);
        }
    }
}

/* Animations */

.scroll-in {
    opacity: 0;
    transition-delay: 200ms;
    transition: opacity 400ms ease;
}

.scroll-show {
    transition-delay: 100ms;
    opacity: 1;
}

.sf-text-wave {
    opacity: 0;
    word-wrap: normal;
}

.sf-text-wave.active {
    opacity: 1;
}

.sf-text-wave span {
    display: inline-block;
}

.sf-text-wave span span {
    animation: sf-text-fadein 500ms forwards 1 ease;
    opacity: 0;
}

@keyframes sf-text-fadein {
    from { 
        opacity: 0;
    }
    to { 
        opacity: 1; 
    }
}